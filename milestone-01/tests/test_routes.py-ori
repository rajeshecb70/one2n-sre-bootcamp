import pytest
import logging
from app import create_app, db
from app.models import Student

# Configure logging for tests
logger = logging.getLogger('app')
logger.setLevel(logging.INFO)
handler = logging.FileHandler('test_app.log')
handler.setLevel(logging.INFO)
formatter = logging.Formatter(
        '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
        )
handler.setFormatter(formatter)
logger.addHandler(handler)


@pytest.fixture(scope='module')
def test_client():
    app = create_app()
    with app.test_client() as testing_client:
        with app.app_context():
            db.create_all()
        yield testing_client


def test_add_student(test_client):
    response = test_client.post(
            '/api/v1/students', json={'name': 'Rajesh', 'age': 21, 'phone_number': 123456}
            )
    assert response.status_code == 201
    assert response.json['name'] == 'Rajesh'
    assert response.json['age'] == 21
#    assert response.json['phone_number'] == 123456
    logger.info(f"Added student: {response.json}")


def test_get_all_students(test_client):
    test_client.post(
            '/api/v1/students', json={'name': 'Jane Doe', 'age': 22}
            )
    response = test_client.get('/api/v1/students')
    assert response.status_code == 200
    assert len(response.json) > 0
    logger.info("Retrieved all students")


def test_get_student(test_client):
    response = test_client.post(
            '/api/v1/students', json={'name': 'Jim Doe', 'age': 25}
            )
    student_id = response.json['id']
    response = test_client.get(f'/api/v1/students/{student_id}')
    assert response.status_code == 200
    assert response.json['name'] == 'Jim Doe'
    logger.info(f"Retrieved student {student_id}: {response.json}")


def test_update_student(test_client):
    response = test_client.post(
            '/api/v1/students', json={'name': 'Jack Doe', 'age': 30}
            )
    student_id = response.json['id']
    response = test_client.put(
            f'/api/v1/students/{student_id}', 
            json={'name': 'Jack Updated', 'age': 31}
           )
    assert response.status_code == 200
    assert response.json['name'] == 'Jack Updated'
    logger.info(f"Updated student {student_id}: {response.json}")


def test_delete_student(test_client):
    response = test_client.post(
            '/api/v1/students', json={'name': 'Jill Doe', 'age': 27}
            )
    student_id = response.json['id']
    response = test_client.delete(f'/api/v1/students/{student_id}')
    assert response.status_code == 204
    response = test_client.get(f'/api/v1/students/{student_id}')
    assert response.status_code == 404
    logger.info(f"Deleted student {student_id}")
