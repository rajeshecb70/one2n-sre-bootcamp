# docker-compose.yml

version: '3.8'

services:
  # API service 1
  api1:
    image: "${DOCKER_IMAGE}:${TAG}" # Custom image name with tag
    container_name: "${CONTAINER_NAME_API1}"
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URL}
      RUN_MIGRATION: "true"
    ports:
      - "8081:5000"
    networks:
      - api-network
    depends_on:
      - db

  # API service 2
  api2:
    image: "${DOCKER_IMAGE}:${TAG}" # Custom image name with tag
    container_name: "${CONTAINER_NAME_API2}"
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URL}
      RUN_MIGRATION: "true"
    ports:
      - "8082:5000"
    networks:
      - api-network
    depends_on:
      - db

  # MySQL 8 database container
  db:
    image: mysql:8.0
    container_name: ${CONTAINER_NAME_DB}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - api-network

  # Nginx reverse proxy
  nginx:
    image: nginx:latest
    container_name: "${CONTAINER_NAME_NGINX}"
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
    networks:
      - api-network

# Define network
networks:
  api-network:
    driver: bridge

# Define volumes
volumes:
  db_data:
