name: CI Pipeline

on:
  push:
    branches:
      - milestone-04/pipeline
    paths:
      - 'milestone-04/**'
  pull_request:
    branches:
      - milestone-04/pipeline
    paths:
      - 'milestone-04/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 3: Build the Docker image
    - name: Build Docker image
      run: make docker-build  # Ensure your Makefile handles the build

    # Step 4: Set up the database using Docker Compose
    - name: Start Database
      run: |
        docker-compose up -d db  # Ensure you have a 'db' service in your docker-compose.yml
        sleep 10  # Wait for the database to be ready

    # Step 5: Run application (if needed)
    - name: Start Application
      run: |
        docker-compose up -d flask-api # Start the application if it is containerized
        sleep 10  # Wait for the application to be ready

    # Step 6: Run tests
    - name: Run tests
      run: make test-flask  # Ensure your Makefile can run tests against the application

    # Step 7: Stop and remove containers
    - name: Stop and remove containers
      run: docker-compose down

    # Step 8: Push the Docker image to DockerHub (if needed)
    - name: Docker login
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker push
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-api:3.0.0
