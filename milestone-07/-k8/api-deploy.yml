apiVersion: v1
kind: Namespace
metadata:
  name: student-api
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-api-config
  namespace: student-api
data:
  DATABASE_URL: "mysql+pymysql://root:mypassword@mysql:3306/studentdb1" # Update with correct service name
---
apiVersion: v1
kind: Secret
metadata:
  name: flask-api-secret
  namespace: student-api
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: bXlwYXNzd29yZA== # Base64 encoded "mypassword"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: flask-api-pv
  namespace: student-api
spec:
  capacity:
    storage: 5Gi # Adjust as necessary
  accessModes:
    - ReadWriteOnce
  hostPath: # Use hostPath for local development; change for production
    path: /mnt/data/flask-api
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flask-api-pvc
  namespace: student-api
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi # Must match the size of the PV
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-api
  namespace: student-api
  labels:
    app: flask-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-api
  template:
    metadata:
      labels:
        app: flask-api
    spec:
      initContainers:
        - name: db-migration
          image: rajeshecb70/flask-api:3.0.2 # Assuming the same image contains the migration script
          #command: ["/bin/sh", "-c", "/app/scripts/run.sh"] # This assumes run.sh is located at /app/scripts
          command: ["/bin/sh", "-c", "/flask-app/run.sh"]
          env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: flask-api-config
                  key: DATABASE_URL
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: flask-api-secret
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: flask-api-data
              mountPath: /flask-api # Mount location for the script
      containers:
        - name: flask-api
          image: rajeshecb70/flask-api:3.0.2
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: flask-api-config
                  key: DATABASE_URL
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: flask-api-secret
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: flask-api-data
              mountPath: /app/data # Adjust to where your Flask app expects to store data
      volumes:
        - name: flask-api-data
          persistentVolumeClaim:
            claimName: flask-api-pvc # Link to the PVC
---
apiVersion: v1
kind: Service
metadata:
  name: flask-api
  namespace: student-api
spec:
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: flask-api
